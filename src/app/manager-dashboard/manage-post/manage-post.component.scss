$primary-colour: #78b4ff;

// mixin, should display proportional checkbox based on relative font-size of container
@mixin custom-checkbox($selector: 'label', $box-size: 1.1em) {
  > input {
    opacity: 0;
    position: absolute;
    z-index: -1;

    &:checked + #{$selector} {
      color: $primary-colour;

      &::before {
        background: rgba($primary-colour, .25);
        border-color: $primary-colour;
      }

      &::after {
        transform: scale(1) rotate(-45deg);
      }

      a {
        text-decoration: underline;
      }
    }
  }

  > #{$selector} {
    @content;
    cursor: pointer;
    display: inline-block;
    position: relative;
    transition: all .1s;

    &::before {
      border: calc(0.8px + .06em) solid #4d4d4d;
      border-radius: calc(3px + .05em);
      content: '';
      display: inline-block;
      font-size: $box-size;
      height: calc(3px + .8em);
      transition: all .1s;
      vertical-align: middle;
      width: calc(3px + .8em);
    }

    &::after {
      border-bottom: calc(2px + .07em) solid $primary-colour;
      border-left: calc(2px + .07em) solid $primary-colour;
      content: '';
      font-size: $box-size;
      height: calc(3px + .22em);
      left: calc(.25em - 1px);
      position: absolute;
      top: calc(50% - .1em - 1px);
      transform: scale(0) rotate(-45deg);
      transition: all .1s;
      width: calc(5px + .32em);
    }
  }
}

// applied mixin to container, margin just for demo purposes
.custom-checkbox {
  @include custom-checkbox;
}